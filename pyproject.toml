# POETRY

[tool.poetry]
name = "uebusaito"
version = "0.1.0"
description = "Personal Website"
authors = ["Rados≈Çaw Ganczarek <radoslaw@ganczarek.in>"]
license = "BSD 3-Clause License"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
argon2-cffi = "~23.1.0"
crispy-bootstrap5 = "~2023.10"
django-allauth = "~0.58.2"
django-compressor = "~4.4.0"
django-environ = "~0.11.2"
django-model-utils = "~4.3.1"
django-redis = "~5.4.0"
django = "~5.0.0"
hiredis = "~2.2.3"
pillow = "~10.1.0"
python-slugify = "~8.0.1"
whitenoise = "~6.6.0"
psycopg = { extras = ["c"], version = "^3.1.14" }

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
django-coverage-plugin = "^3.1.0"
django-debug-toolbar = "^4.2.0"
django-extensions = "^3.2.3"
django-stubs = { version = "^4.2.7", extras = ["compatible-mypy"] }
djlint = "^1.34.0"
factory-boy = "^3.3.0"
flake8-isort = "^6.1.1"
flake8 = "^6.1.0"
ipdb = "^0.13.13"
mypy = "^1.7.1"
pre-commit = "^3.5.0"
pylint-django = "^2.5.5"
pytest-django = "^4.7.0"
pytest-sugar = "^0.9.7"
pytest = "^7.4.3"
sphinx-autobuild = "^2021.3.14"
sphinx = "^7.2.6"
werkzeug = { version = "^3.0.1", extras = ["watchdog"] }


[tool.poetry.group.production.dependencies]
django-anymail = "10.2"
gunicorn = "21.2.0"
psycopg = { version = "3.1.14", extras = ["c"] }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = ["tests.py", "test_*.py"]

# ==== Coverage ====
[tool.coverage.run]
include = ["uebusaito/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py312']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = ["uebusaito", "config"]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = ["pylint_django"]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = ["missing-docstring", "invalid-name"]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2
